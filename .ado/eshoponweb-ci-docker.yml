# NAME THE PIPELINE SAME AS FILE (WITHOUT ".yml")

resources:
  repositories:
    - repository: self
      trigger: none

variables:
  azureServiceConnection: 'azure subs'
  subscriptionId: 'abcc12e8-46f6-4fb0-ae1f-86a92dafdaa7'
  resourceGroup: 'rg-az400-container-danasoft'
  location: 'centralus'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: eShopOnWebSelfPool
      demands: Agent.Name -equals eShopOnWebSelfAgent
    steps:
    # Install Docker on Windows (if not already installed)
    - task: PowerShell@2
      displayName: 'Install Docker on Windows'
      inputs:
        targetType: 'inline'
        script: |
          # Check if Docker is installed
          $dockerInstalled = Get-Command docker -ErrorAction SilentlyContinue
          if (-not $dockerInstalled) {
              Write-Host "Docker not found. Installing Docker..."
              
              # Download Docker installation script
              Invoke-WebRequest -Uri https://get.docker.com/ -OutFile docker-install.ps1
              
              # Modify the docker-install.ps1 script to handle PowerShell syntax
              $scriptContent = Get-Content -Path docker-install.ps1
    
              # Fix the if conditions to use PowerShell syntax
              $scriptContent = $scriptContent -replace 'if \[ -z', 'if ($null -eq'
              $scriptContent = $scriptContent -replace '\]', ')'
              
              # Save the modified script
              Set-Content -Path docker-install.ps1 -Value $scriptContent
    
              # Run the modified script
              .\docker-install.ps1
              Write-Host "Docker installation complete."
          } else {
              Write-Host "Docker is already installed."
          }

    - task: AzureResourceManagerTemplateDeployment@3
      displayName: Deploy ACR using Bicep
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: $(azureServiceConnection)
        subscriptionId: $(subscriptionId)
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resourceGroup)'
        location: '$(location)'
        templateLocation: 'Linked artifact'
        csmFile: 'infra/acr.bicep'
        deploymentMode: 'Incremental'
        deploymentOutputs: 'outputJson'
    - task: PowerShell@2
      displayName: Parse Bicep Output
      inputs:
        targetType: 'inline'
        script: |
          $var=ConvertFrom-Json '$(outputJson)'
          $value=$var.acrLoginServer.value
          Write-Host "##vso[task.setvariable variable=acrLoginServer;]$value"
    - task: Docker@0
      displayName: 'Build the docker image'
      inputs:
        azureSubscription: $(azureServiceConnection)
        azureContainerRegistry: $(acrLoginServer)
        dockerFile: 'src/Web/Dockerfile'
        defaultContext: false
        context: $(Build.SourcesDirectory)
        includeLatestTag: true
        imageName: eshoponweb/web:$(Build.BuildId)
    - task: Docker@0
      displayName: 'Push the docker images'
      inputs:
        azureSubscription: $(azureServiceConnection)
        azureContainerRegistry: $(acrLoginServer)
        action: 'Push an image'
        imageName: eshoponweb/web:$(Build.BuildId)
        includeLatestTag: true
    
